/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2017 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.onboarding;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollProxy;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.TiC;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.util.TiConvert;
import org.appcelerator.titanium.util.TiRHelper;
import org.appcelerator.titanium.util.TiRHelper.ResourceNotFoundException;
import org.appcelerator.titanium.proxy.TiViewProxy;
import org.appcelerator.titanium.view.TiCompositeLayout;
import org.appcelerator.titanium.view.TiCompositeLayout.LayoutArrangement;
import org.appcelerator.titanium.view.TiUIView;

import android.app.Activity;
import android.graphics.Color;
import android.app.Activity;
import android.view.View;
import android.view.LayoutInflater;
import android.content.res.Resources;

import com.ramotion.paperonboarding.PaperOnboardingEngine;
import com.ramotion.paperonboarding.PaperOnboardingPage;
import com.ramotion.paperonboarding.listeners.PaperOnboardingOnChangeListener;
import com.ramotion.paperonboarding.listeners.PaperOnboardingOnRightOutListener;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;

// This proxy can be created by calling TiOnboarding.createExample({message: "hello world"})
@Kroll.proxy(creatableInModule = TiOnboardingModule.class)
public class ViewProxy extends TiViewProxy
{
	// Standard Debugging variables
	private static final String LCAT = "TiOnboarding";
	private static final boolean DBG = TiConfig.LOGD;

	private class OnboardingView extends TiUIView
	{

		private ArrayList<PaperOnboardingPage> onBoardingItems = new ArrayList<>();
		private PaperOnboardingEngine engine;
		int resId_viewHolder = -1;
		int resId_rootView = -1;
		View viewWrapper;

		public OnboardingView(TiViewProxy proxy)
		{
			super(proxy);
			this.proxy = proxy;
			String packageName = proxy.getActivity().getPackageName();
			Resources resources = proxy.getActivity().getResources();

			resId_viewHolder = resources.getIdentifier("onboarding_main_layout", "layout", packageName);
			resId_rootView = resources.getIdentifier("onboardingRootView", "id", packageName);

			LayoutInflater inflater = LayoutInflater.from(proxy.getActivity());
			viewWrapper = inflater.inflate(resId_viewHolder, null);

			setNativeView(viewWrapper);
		}

		@Override
		public void processProperties(KrollDict d)
		{
			super.processProperties(d);
			if (d.containsKey("items")) {
				processItems((Object[]) d.get("items"));
			}
		}

		private void processItems(Object[] _items)
		{
			ArrayList<Object> items = new ArrayList<Object>(Arrays.asList(_items));
			for (int i = 0; i < items.size(); i++) {
				Object item = items.get(i);
				addPage(new KrollDict((HashMap) item));
			}
			setupEngine();
		}

		private void addPage(KrollDict item)
		{
			int informationImage_Id = -1;
			int pageIcon_Id = -1;
			try {
				informationImage_Id = TiRHelper.getApplicationResource("drawable." + item.get("informationImage"));

			} catch (ResourceNotFoundException e) {
				Log.e(LCAT, "[ERROR] EXCEPTION -- informationImage NOT FOUND");
			}

			try {
				pageIcon_Id = TiRHelper.getApplicationResource("drawable." + item.get("pageIcon"));

			} catch (ResourceNotFoundException e) {
				Log.e(LCAT, "[ERROR] EXCEPTION -- pageIcon NOT FOUND");
			}

			onBoardingItems.add(new PaperOnboardingPage(
				item.get("title").toString(), item.get("description").toString(),
				TiConvert.toColor((String) item.get("color")), informationImage_Id, pageIcon_Id));
		}

		private void setupEngine()
		{
			engine =
				new PaperOnboardingEngine(viewWrapper.findViewById(resId_rootView), onBoardingItems, proxy.getActivity());
		}
	}

	// Constructor
	public ViewProxy()
	{
		super();
	}

	@Override
	public TiUIView createView(Activity activity)
	{
		TiUIView view = new OnboardingView(this);
		view.getLayoutParams().autoFillsHeight = true;
		view.getLayoutParams().autoFillsWidth = true;
		return view;
	}

	// Handle creation options
	@Override
	public void handleCreationDict(KrollDict options)
	{
		super.handleCreationDict(options);
	}
}
